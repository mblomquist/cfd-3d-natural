! temperature3d_boundary Subroutine for 3D CFD Problems
!
! Written by Matt Blomquist
! Last Update: 2018-07-16 (YYYY-MM-DD)
!
! This subroutine resets boundary conditions and coefficients for
! temperature

subroutine temperature3d_boundary

  ! Pull in standard variable header
  include "var3d.dec"

  ! Define internal variables
  integer :: i, j, k

  ! Set Boundary Condition :: West Plane
  Aw_T(1,2:n-2,2:l-2) = 0.
  Ae_T(1,2:n-2,2:l-2) = 0.
  As_T(1,2:n-2,2:l-2) = 0.
  An_T(1,2:n-2,2:l-2) = 0.
  Ab_T(1,2:n-2,2:l-2) = 0.
  At_T(1,2:n-2,2:l-2) = 0.
  Ap_T(1,2:n-2,2:l-2) = 1.
  b_T(1,2:n-2,2:l-2) = 0.

  ! Check Boundary Condition Type
  if (T_bc_wc .eq. 1) then
    ! Given Input Condition
    b_T(1,2:n-2,2:l-2) = T_bc_wv
  elseif (T_bc_wc .eq. 2) then
    ! Symmetry Condition
    Ae_T(1,2:n-2,2:l-2) = 1.
    b_T(1,2:n-2,2:l-2) = 0.
  else
    ! Wall Condition
    b_T(1,2:n-2,2:l-2) = 0.
  end if

  ! Set Boundary Condition :: East Plane
  Aw_T(m-1,2:n-2,2:l-2) = 0.
  Ae_T(m-1,2:n-2,2:l-2) = 0.
  As_T(m-1,2:n-2,2:l-2) = 0.
  An_T(m-1,2:n-2,2:l-2) = 0.
  Ab_T(m-1,2:n-2,2:l-2) = 0.
  At_T(m-1,2:n-2,2:l-2) = 0.
  Ap_T(m-1,2:n-2,2:l-2) = 1.
  b_T(m-1,2:n-2,2:l-2) = 0.

  ! Check Boundary Condition Type
  if (T_bc_ec .eq. 1) then
    ! Given Input Condition
    b_T(m-1,2:n-2,2:l-2) = T_bc_ev
  elseif (T_bc_ec .eq. 2) then
    ! Symmetry Condition
    Aw_T(m-1,2:n-2,2:l-2) = 1.
    b_T(m-1,2:n-2,2:l-2) = 0.
  else
    ! Wall Condition
    b_T(m-1,2:n-2,2:l-2) = 0.
  end if

  ! Set Boundary Condition :: South Plane
  Aw_T(2:m-1,1,2:l-2) = 0.
  Ae_T(2:m-1,1,2:l-2) = 0.
  As_T(2:m-1,1,2:l-2) = 0.
  An_T(2:m-1,1,2:l-2) = 0.
  Ab_T(2:m-1,1,2:l-2) = 0.
  At_T(2:m-1,1,2:l-2) = 0.
  Ap_T(2:m-1,1,2:l-2) = 1.
  b_T(2:m-1,1,2:l-2) = 0.

  ! Check Boundary Condition Type
  if (T_bc_sc .eq. 1) then
    ! Given Input Condition
    b_T(2:m-1,1,2:l-2) = T_bc_sv
  elseif (T_bc_sc .eq. 2) then
    ! Symmetry Condition
    An_T(2:m-1,1,2:l-2) = 1.
    b_T(2:m-1,1,2:l-2) = 0.
  else
    ! Wall Condition
    b_T(2:m-1,1,2:l-2) = 0.
  end if

  ! Set Boundary Condition :: North Plane
  Aw_T(2:m-1,n-1,2:l-2) = 0.
  Ae_T(2:m-1,n-1,2:l-2) = 0.
  As_T(2:m-1,n-1,2:l-2) = 0.
  An_T(2:m-1,n-1,2:l-2) = 0.
  Ab_T(2:m-1,n-1,2:l-2) = 0.
  At_T(2:m-1,n-1,2:l-2) = 0.
  Ap_T(2:m-1,n-1,2:l-2) = 1.
  b_T(2:m-1,n-1,2:l-2) = 0.

  ! Check Boundary Condition Type
  if (T_bc_nc .eq. 1) then
    ! Given Input Condition
    b_T(2:m-1,n-1,2:l-2) = T_bc_nv
  elseif (T_bc_nc .eq. 2) then
    ! Symmetry Condition
    As_T(2:m-1,n-1,2:l-2) = 1.
    b_T(2:m-1,n-1,2:l-2) = 0.
  else
    ! Wall Condition
    b_T(2:m-1,n-1,2:l-2) = 0.
  end if

  ! Set Boundary Condition :: Bottom Plane
  Aw_T(2:m-1,2:n-2,1) = 0.
  Ae_T(2:m-1,2:n-2,1) = 0.
  As_T(2:m-1,2:n-2,1) = 0.
  An_T(2:m-1,2:n-2,1) = 0.
  Ab_T(2:m-1,2:n-2,1) = 0.
  At_T(2:m-1,2:n-2,1) = 0.
  Ap_T(2:m-1,2:n-2,1) = 1.
  b_T(2:m-1,2:n-2,1) = 0.

  ! Check Boundary Condition Type
  if (T_bc_bc .eq. 1) then
    ! Given Input Condition
    b_T(2:m-1,2:n-2,1) = T_bc_bv
  elseif (T_bc_bc .eq. 2) then
    ! Symmetry Condition
    At_T(2:m-1,2:n-2,1) = 1.
    b_T(2:m-1,2:n-2,1) = 0.
  else
    ! Wall Condition
    b_T(2:m-1,2:n-2,1) = 0.
  end if

  ! Set Boundary Condition :: Top Plane
  Aw_T(2:m-1,2:n-2,l-1) = 0.
  Ae_T(2:m-1,2:n-2,l-1) = 0.
  As_T(2:m-1,2:n-2,l-1) = 0.
  An_T(2:m-1,2:n-2,l-1) = 0.
  Ab_T(2:m-1,2:n-2,l-1) = 0.
  At_T(2:m-1,2:n-2,l-1) = 0.
  Ap_T(2:m-1,2:n-2,l-1) = 1.
  b_T(2:m-1,2:n-2,l-1) = 0.

  ! Check Boundary Condition Type
  if (T_bc_tc .eq. 1) then
    ! Given Input Condition
    b_T(2:m-1,2:n-2,l-1) = T_bc_tv
  elseif (T_bc_tc .eq. 2) then
    ! Symmetry Condition
    Ab_T(2:m-1,2:n-2,l-1) = 1.
    b_T(2:m-1,2:n-2,l-1) = 0.
  else
    ! Wall Condition
    b_T(2:m-1,2:n-2,l-1) = 0.
  end if

  ! Set Boundary Condition :: West-South Line
  Aw_T(1,1,2:l-2) = 0.
  Ae_T(1,1,2:l-2) = 1.
  As_T(1,1,2:l-2) = 0.
  An_T(1,1,2:l-2) = 1.
  Ab_T(1,1,2:l-2) = 0.
  At_T(1,1,2:l-2) = 0.
  Ap_T(1,1,2:l-2) = 2.
  b_T(1,1,2:l-2) = 0.

  ! Set Boundary Condition :: West-North Line
  Aw_T(1,n-1,2:l-2) = 0.
  Ae_T(1,n-1,2:l-2) = 1.
  As_T(1,n-1,2:l-2) = 1.
  An_T(1,n-1,2:l-2) = 0.
  Ab_T(1,n-1,2:l-2) = 0.
  At_T(1,n-1,2:l-2) = 0.
  Ap_T(1,n-1,2:l-2) = 2.
  b_T(1,n-1,2:l-2) = 0.

  ! Set Boundary Condition :: West-Bottom Line
  Aw_T(1,2:n-2,1) = 0.
  Ae_T(1,2:n-2,1) = 1.
  As_T(1,2:n-2,1) = 0.
  An_T(1,2:n-2,1) = 0.
  Ab_T(1,2:n-2,1) = 0.
  At_T(1,2:n-2,1) = 1.
  Ap_T(1,2:n-2,1) = 2.
  b_T(1,2:n-2,1) = 0.

  ! Set Boundary Condition :: West-Top Line
  Aw_T(1,2:n-2,l-1) = 0.
  Ae_T(1,2:n-2,l-1) = 1.
  As_T(1,2:n-2,l-1) = 0.
  An_T(1,2:n-2,l-1) = 0.
  Ab_T(1,2:n-2,l-1) = 1.
  At_T(1,2:n-2,l-1) = 0.
  Ap_T(1,2:n-2,l-1) = 2.
  b_T(1,2:n-2,l-1) = 0.

  ! Set Boundary Condition :: East-South Line
  Aw_T(m-1,1,2:l-2) = 1.
  Ae_T(m-1,1,2:l-2) = 0.
  As_T(m-1,1,2:l-2) = 0.
  An_T(m-1,1,2:l-2) = 1.
  Ab_T(m-1,1,2:l-2) = 0.
  At_T(m-1,1,2:l-2) = 0.
  Ap_T(m-1,1,2:l-2) = 2.
  b_T(m-1,1,2:l-2) = 0.

  ! Set Boundary Condition :: East-North Line
  Aw_T(m-1,n-1,2:l-2) = 1.
  Ae_T(m-1,n-1,2:l-2) = 0.
  As_T(m-1,n-1,2:l-2) = 1.
  An_T(m-1,n-1,2:l-2) = 0.
  Ab_T(m-1,n-1,2:l-2) = 0.
  At_T(m-1,n-1,2:l-2) = 0.
  Ap_T(m-1,n-1,2:l-2) = 2.
  b_T(m-1,n-1,2:l-2) = 0.

  ! Set Boundary Condition :: East-Bottom Line
  Aw_T(m-1,2:n-2,1) = 1.
  Ae_T(m-1,2:n-2,1) = 0.
  As_T(m-1,2:n-2,1) = 0.
  An_T(m-1,2:n-2,1) = 0.
  Ab_T(m-1,2:n-2,1) = 0.
  At_T(m-1,2:n-2,1) = 1.
  Ap_T(m-1,2:n-2,1) = 2.
  b_T(m-1,2:n-2,1) = 0.

  ! Set Boundary Condition :: East-Top Line
  Aw_T(m-1,2:n-2,l-1) = 1.
  Ae_T(m-1,2:n-2,l-1) = 0.
  As_T(m-1,2:n-2,l-1) = 0.
  An_T(m-1,2:n-2,l-1) = 0.
  Ab_T(m-1,2:n-2,l-1) = 1.
  At_T(m-1,2:n-2,l-1) = 0.
  Ap_T(m-1,2:n-2,l-1) = 2.
  b_T(m-1,2:n-2,l-1) = 0.

  ! Set Boundary Condition :: South-Bottom Line
  Aw_T(2:m-1,1,1) = 0.
  Ae_T(2:m-1,1,1) = 0.
  As_T(2:m-1,1,1) = 0.
  An_T(2:m-1,1,1) = 1.
  Ab_T(2:m-1,1,1) = 0.
  At_T(2:m-1,1,1) = 1.
  Ap_T(2:m-1,1,1) = 2.
  b_T(2:m-1,1,1) = 0.

  ! Set Boundary Condition :: South-Top Line
  Aw_T(2:m-1,1,l-1) = 0.
  Ae_T(2:m-1,1,l-1) = 0.
  As_T(2:m-1,1,l-1) = 0.
  An_T(2:m-1,1,l-1) = 1.
  Ab_T(2:m-1,1,l-1) = 1.
  At_T(2:m-1,1,l-1) = 0.
  Ap_T(2:m-1,1,l-1) = 2.
  b_T(2:m-1,1,l-1) = 0.

  ! Set Boundary Condition :: North-Bottom Line
  Aw_T(2:m-1,n-1,1) = 0.
  Ae_T(2:m-1,n-1,1) = 0.
  As_T(2:m-1,n-1,1) = 1.
  An_T(2:m-1,n-1,1) = 0.
  Ab_T(2:m-1,n-1,1) = 0.
  At_T(2:m-1,n-1,1) = 1.
  Ap_T(2:m-1,n-1,1) = 2.
  b_T(2:m-1,n-1,1) = 0.

  ! Set Boundary Condition :: North-Top Line
  Aw_T(2:m-1,n-1,l-1) = 0.
  Ae_T(2:m-1,n-1,l-1) = 0.
  As_T(2:m-1,n-1,l-1) = 1.
  An_T(2:m-1,n-1,l-1) = 0.
  Ab_T(2:m-1,n-1,l-1) = 1.
  At_T(2:m-1,n-1,l-1) = 0.
  Ap_T(2:m-1,n-1,l-1) = 2.
  b_T(2:m-1,n-1,l-1) = 0.

  ! Set Boundary Condition :: West-South-Bottom Corner
  Aw_T(1,1,1) = 0.
  Ae_T(1,1,1) = 1.
  As_T(1,1,1) = 0.
  An_T(1,1,1) = 1.
  Ab_T(1,1,1) = 0.
  At_T(1,1,1) = 1.
  Ap_T(1,1,1) = 3.
  b_T(1,1,1) = 0.

  ! Set Boundary Condition :: West-North-Bottom Corner
  Aw_T(1,n-1,1) = 0.
  Ae_T(1,n-1,1) = 1.
  As_T(1,n-1,1) = 1.
  An_T(1,n-1,1) = 0.
  Ab_T(1,n-1,1) = 0.
  At_T(1,n-1,1) = 1.
  Ap_T(1,n-1,1) = 3.
  b_T(1,n-1,1) = 0.

  ! Set Boundary Condition :: East-South-Bottom Corner
  Aw_T(m-1,1,1) = 1.
  Ae_T(m-1,1,1) = 0.
  As_T(m-1,1,1) = 0.
  An_T(m-1,1,1) = 1.
  Ab_T(m-1,1,1) = 0.
  At_T(m-1,1,1) = 1.
  Ap_T(m-1,1,1) = 3.
  b_T(m-1,1,1) = 0.

  ! Set Boundary Condition :: East-North-Bottom Corner
  Aw_T(m-1,n-1,1) = 1.
  Ae_T(m-1,n-1,1) = 0.
  As_T(m-1,n-1,1) = 1.
  An_T(m-1,n-1,1) = 0.
  Ab_T(m-1,n-1,1) = 0.
  At_T(m-1,n-1,1) = 1.
  Ap_T(m-1,n-1,1) = 3.
  b_T(m-1,n-1,1) = 0.

  ! Set Boundary Condition :: West-South-Top Corner
  Aw_T(1,1,l-1) = 0.
  Ae_T(1,1,l-1) = 1.
  As_T(1,1,l-1) = 0.
  An_T(1,1,l-1) = 1.
  Ab_T(1,1,l-1) = 1.
  At_T(1,1,l-1) = 0.
  Ap_T(1,1,l-1) = 3.
  b_T(1,1,l-1) = 0.

  ! Set Boundary Condition :: West-North-Top Corner
  Aw_T(1,n-1,l-1) = 0.
  Ae_T(1,n-1,l-1) = 1.
  As_T(1,n-1,l-1) = 1.
  An_T(1,n-1,l-1) = 0.
  Ab_T(1,n-1,l-1) = 1.
  At_T(1,n-1,l-1) = 0.
  Ap_T(1,n-1,l-1) = 3.
  b_T(1,n-1,l-1) = 0.

  ! Set Boundary Condition :: East-South-Top Corner
  Aw_T(m-1,1,l-1) = 1.
  Ae_T(m-1,1,l-1) = 0.
  As_T(m-1,1,l-1) = 0.
  An_T(m-1,1,l-1) = 1.
  Ab_T(m-1,1,l-1) = 1.
  At_T(m-1,1,l-1) = 0.
  Ap_T(m-1,1,l-1) = 3.
  b_T(m-1,1,l-1) = 0.

  ! Set Boundary Condition :: East-North-Top Corner
  Aw_T(m-1,n-1,l-1) = 1.
  Ae_T(m-1,n-1,l-1) = 0.
  As_T(m-1,n-1,l-1) = 1.
  An_T(m-1,n-1,l-1) = 0.
  Ab_T(m-1,n-1,l-1) = 1.
  At_T(m-1,n-1,l-1) = 0.
  Ap_T(m-1,n-1,l-1) = 3.
  b_T(m-1,n-1,l-1) = 0.

  return

 end subroutine temperature3d_boundary